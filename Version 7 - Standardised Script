// Import necessary Java classes
var ScriptVars = Java.type('org.zaproxy.zap.extension.script.ScriptVars');
var By = Java.type('org.openqa.selenium.By');
var Duration = Java.type('java.time.Duration');
var Thread = Java.type('java.lang.Thread');
var ExpectedConditions = Java.type('org.openqa.selenium.support.ui.ExpectedConditions');

// Logger function for consistent logging
function logger(msg) {
    print('[' + this['zap.script.name'] + '] ' + msg);
}

// Helper function to wait for an element and click it
function waitAndClick(driver, wait, selector, logMsg) {
    try {
        wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(selector)));
        driver.findElement(By.cssSelector(selector)).click();
        logger(logMsg);
    } catch (e) {
        logger("Error clicking '" + selector + "': " + e);
    }
}

// Helper function to click all buttons on the current page
function clickAllButtons(driver, wait) {
    try {
        // Wait for the page to load buttons
        Thread.sleep(2000);
        var buttons = driver.findElements(By.tagName("button"));
        var count = buttons.size();
        logger("Found " + count + " button(s) on the page.");

        // Loop over each button (re-fetching to avoid stale elements)
        for (var i = 0; i < count; i++) {
            try {
                var currentButtons = driver.findElements(By.tagName("button"));
                if (i < currentButtons.size()) {
                    var btn = currentButtons.get(i);
                    driver.executeScript("arguments[0].scrollIntoView(true);", btn);
                    Thread.sleep(500); // brief delay for stability
                    driver.executeScript("arguments[0].click();", btn);
                    logger("Clicked button [" + i + "]: " + btn.getText());
                    Thread.sleep(500); // allow any triggered actions to load
                }
            } catch (clickError) {
                logger("Error clicking button [" + i + "]: " + clickError);
            }
        }
        logger("Finished clicking all buttons on this page.");
    } catch (e) {
        logger("Error during clickAllButtons: " + e);
    }
}

// Helper function to navigate to a page and crawl (click all buttons)
function navigateAndCrawl(driver, wait, selectors, pageName) {
    logger("Navigating to " + pageName);
    // Perform each navigation step by clicking the selectors sequentially
    selectors.forEach(function(selector) {
        waitAndClick(driver, wait, selector, "Clicked '" + selector + "' for " + pageName);
        Thread.sleep(1000); // small pause between navigation actions
    });
    Thread.sleep(2000); // ensure the page loads
    logger("Crawling " + pageName + " by clicking all buttons.");
    clickAllButtons(driver, wait);
}

// Main function triggered when the browser is launched
function browserLaunched(ssutils) {
    var token = ScriptVars.getGlobalVar("juiceshop.token");
    var driver = ssutils.getWebDriver();
    driver.manage().window().maximize();
    var wait = new org.openqa.selenium.support.ui.WebDriverWait(driver, Duration.ofSeconds(10));

    // If a token is available, inject it and then proceed to crawl pages
    if (token) {
        logger("Injecting token into cookies and localStorage");
        var url = ssutils.waitForURL(5000);
        if (url.startsWith("http://localhost:3000")) {
            var script = 'document.cookie = "token=' + token + '";\n' +
                         'window.localStorage.setItem("token", "' + token + '");';
            driver.executeScript(script);
        }
    } else {
        logger("No token provided; proceeding with UI interactions.");
        // Attempt to close any popup that might interfere
        try {
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".close-dialog")));
            var closeDialog = driver.findElement(By.cssSelector(".close-dialog"));
            if (closeDialog.isDisplayed()) {
                closeDialog.click();
                logger("Closed popup using .close-dialog");
            }
        } catch (e) {
            logger("No popup found or popup not clickable: " + e);
        }
    }

    // Define the pages and their navigation selectors in order
    var pages = [
        { 
            name: "Order History", 
            selectors: [
                "#navbarAccount", 
                "button.mat-mdc-menu-item:nth-child(2)", 
                "button.ng-tns-c1923052698-5:nth-child(1)"
            ]
        },
        { 
            name: "Recycling", 
            selectors: [
                "#navbarAccount", 
                "button.mat-mdc-menu-item:nth-child(2)", 
                "button.ng-tns-c1923052698-5:nth-child(2)"
            ]
        },
        { 
            name: "Saved Addresses", 
            selectors: [
                "#navbarAccount", 
                "button.mat-mdc-menu-item:nth-child(2)", 
                "button.ng-tns-c1923052698-5:nth-child(4)"
            ]
        },
        { 
            name: "Payment Details", 
            selectors: [
                "#navbarAccount", 
                "button.mat-mdc-menu-trigger:nth-child(2)", 
                "button.mat-mdc-menu-item:nth-child(5)"
            ]
        }
    ];

    // Loop through each page, navigate, and click all buttons to crawl the page
    pages.forEach(function(page) {
        navigateAndCrawl(driver, wait, page.selectors, page.name);
    });
}

